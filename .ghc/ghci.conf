:set prompt "Î»> "
:def pretty \_ -> Prelude.return ("import Text.Show.Pretty (pPrint, ppShow)\n:set -interactive-print pPrint")
:def no-pretty \_ -> Prelude.return (":set -interactive-print System.IO.print")
:def clash \_ -> Prelude.return (":set -XBinaryLiterals -XDataKinds -XDeriveAnyClass -XDeriveGeneric -XDeriveLift -XDuplicateRecordFields -XFlexibleContexts -XFlexibleInstances -XFunctionalDependencies -XLambdaCase -XMagicHash -XMultiParamTypeClasses -XNoImplicitPrelude -XScopedTypeVariables -XTemplateHaskell -XTupleSections -XTypeApplications -XTypeFamilies -XTypeOperators -XTypeSynonymInstances -fplugin=GHC.TypeLits.Extra.Solver -fplugin=GHC.TypeLits.KnownNat.Solver -fplugin=GHC.TypeLits.Normalise")

